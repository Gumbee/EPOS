# compare algorithms (bicycle and energy datasets)
# MinVarGmA, Greedy (add afterwards as baseline), COHDA
# compare with Opt on small size
# #iterations to beat Greedy?
# per algorithm: compare different configurations (MinVar, Ants, Reinforcement learning?)

init-out = output-data/EAlgorithm.m
init-numExperiments = 20
init-numIterations = 500
init-numUser = 100
init-architecture.maxChildren = 2
init-architecture.balance = WEIGHT_BALANCED
init-architecture.priority = HIGH_RANK
init-architecture.rank = RANK
init-architecture.type = SORTED_HtL
init-architecture.rankGenerator = RandomRank
init-costSignal = zero
# measure same as cost function

plot-dataset = Noise_16_100_0_1
comp-agentFactory = COHDA, IGreedy

list-config1 = MinCostGmS(ivar,m/n-m,sum)
plot-fitnessFunction = config1

comp-aggregator = maxImprovement