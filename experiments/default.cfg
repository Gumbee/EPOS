# compare plans
# number of plans (generic dataset), verify results with IEPOS/IGreedy (empirical dataset)
# std-deviation of plans -> impact on performance

init-numExperiments = 1
init-numIterations = 100
init-numUser = 1000
#comp-architecture.priority = HIGH_RANK,LOW_RANK
init-architecture.priority = HIGH_RANK
init-architecture.rank = RANK
init-architecture.type = SORTED_HtL
#init-architecture.rankGenerator = StdRank
init-architecture.rankGenerator = RandomRank
init-costSignal = zero
# measure same as cost function

init-architecture.balance = WEIGHT_BALANCED
plot-architecture.maxChildren = 2
#plot-dataset = B8,E5.1,Sparse_16_100_1, Noise_16_100_0_1
#comp-dataset = Sparse_16_100_1_0.0, Sparse_16_100_1_0.2, Sparse_16_100_1_0.4, Sparse_16_100_1_1, Sparse_16_100_1_2, Noise_16_100_0_1
comp-dataset = Sparse_16_100_1_0, Noise_16_100_0_1
#comp-dataset = B8,B10
comp-agentFactory = IGreedy
#comp-outputMovie = false

list-config1 = MinCostGmA(std,m/n-m,sum)
plot-fitnessFunction = config1
comp-localSearch = 
#comp-rampUpRate = 0.1