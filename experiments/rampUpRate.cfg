# compare plans
# number of plans (generic dataset), verify results with IEPOS/IGreedy (empirical dataset)
# std-deviation of plans -> impact on performance

init-out = output-data/ERampUpRate.m
init-numExperiments = 20
init-numIterations = 300
init-numUser = 1000
init-architecture.priority = HIGH_RANK
init-architecture.rank = RANK
init-architecture.type = SORTED_HtL
init-architecture.rankGenerator = RandomRank
init-costSignal = zero
# measure same as cost function

init-architecture.balance = WEIGHT_BALANCED
plot-architecture.maxChildren = 2
plot-dataset = Sparse_16_100_1, Noise_16_100_0_1, B8, B10, E5.1
comp-agentFactory = IGreedy
#comp-outputMovie = false

list-config1 = MinCostGmA(std,m/n-m,sum)
plot-fitnessFunction = config1
comp-localSearch = 
comp-rampUpRate = ,1,0.5,0.25,0.125,0.0625