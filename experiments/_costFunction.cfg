# compare cost functions
# variance, match target, generic quadratic cost, cost
# max entropy, normalized deviation

# evaluation: when within ...% of equilibrium?

# rand: improvement for minimizing std deviation, only when 1'*A*1~0 and a'*A*a>>0, a'*1=0 (A p.s.d. not sufficient), equal B can improve convergence (E5.1)
# rand: no noticeable difference in convergence between non-convex/convex problems.
# rand: convergence behaviour of G/GmA and normalized/un-normalized previous aggregates similar to min variance

init-numExperiments = 1
init-numIterations = 50
init-numUser = 99999
init-architecture.priority = HIGH_RANK
init-architecture.rank = RANK
init-architecture.type = SORTED_HtL
init-architecture.rankGenerator = RandomRank
plot-measure = ,std

plot-architecture.balance = WEIGHT_BALANCED
plot-architecture.maxChildren = 2
plot-dataset = E5.1
comp-agentFactory = IGreedy
comp-outputMovie = false

list-config1 = MinCostGmA(std,m/n-m,sum), \
               MinCostGmA(match,m/n-m,sum), \
               MinCostGmA(dot,m/n-m,sum), \
               MinCostGmA(rand,m/n-m,sum), \
               MinCostGmA(relStd,m/n-m,sum), \
               MinCostGmA(entropy,m/n-m,sum)
list-config2 = MinCostGmA(rand,m/n-m,sum)
plot-fitnessFunction = config1

comp-localSearch = 