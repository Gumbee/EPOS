# compare plans
# number of plans (generic dataset), verify results with IEPOS/IGreedy (empirical dataset)
# std-deviation of plans -> impact on performance

init-out = output-data/EPlansNumSparse.m
init-numExperiments = 20
init-numIterations = 500
init-numUser = 1000
init-architecture.priority = HIGH_RANK
init-architecture.rank = RANK
init-architecture.type = SORTED_HtL
init-architecture.rankGenerator = RandomRank
init-costSignal = zero
# measure same as cost function

init-architecture.balance = WEIGHT_BALANCED
plot-architecture.maxChildren = 2
comp-dataset = Sparse_1_100_1, Sparse_2_100_1, Sparse_4_100_1, Sparse_8_100_1, Sparse_16_100_1
comp-agentFactory = IGreedy
#comp-outputMovie = false

list-config1 = MinCostGmA(std,m/n-m,sum)
plot-fitnessFunction = config1
comp-localSearch = 